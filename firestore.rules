rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // ===== Helpers =====
    function isOptString(data, field) {
      return !(field in data) || (data[field] is string);
    }

    function isOptListString(data, field, max) {
      return !(field in data) ||
             (data[field] is list &&
              data[field].size() <= max &&
              (data[field].size() == 0 || data[field][0] is string));
    }

    // ===== /users/{uid} =====
    match /users/{uid} {
      allow get, list: if request.auth != null;

      allow create: if request.auth != null
                    && request.auth.uid == uid
                    && isOptString(request.resource.data, 'name')
                    && isOptString(request.resource.data, 'phoneNumber')
                    && isOptString(request.resource.data, 'profileUrl')
                    && isOptListString(request.resource.data, 'friends', 1000)
                    && isOptListString(request.resource.data, 'blockedUsers', 500);

      allow update: if request.auth != null
                    && request.auth.uid == uid;

      allow delete: if request.auth != null && request.auth.uid == uid;
    }

    // ===== /images/{imageId} ===== ✅ FIX ĐÂY
    match /images/{imageId} {
      // ✅ READ: Người trong visibleTo array
      allow read: if request.auth != null &&
                    request.auth.uid in resource.data.visibleTo;

      // ✅ CREATE: Bắt buộc có uid, visibleTo, và uid phải trong visibleTo
      allow create: if request.auth != null
                    && request.resource.data.uid == request.auth.uid
                    && request.auth.uid in request.resource.data.visibleTo
                    && isOptString(request.resource.data, 'message')
                    && isOptString(request.resource.data, 'url')
                    && isOptString(request.resource.data, 'visibility')
                    && isOptString(request.resource.data, 'ownerName')
                    && isOptString(request.resource.data, 'ownerAvatar')
                    && isOptListString(request.resource.data, 'visibleTo', 1000);

      // ✅ UPDATE: Chỉ chủ ảnh
      allow update: if request.auth != null
                    && resource.data.uid == request.auth.uid;
      
      // DELETE: Chỉ chủ ảnh
      allow delete: if request.auth != null
                    && resource.data.uid == request.auth.uid;

      // ✅ THÊM: Subcollection reactions
      match /reactions/{userId} {
        // READ: Ai cũng đọc được (để hiển thị reactions)
        allow read: if request.auth != null;
        
        // WRITE: Chủ reaction hoặc chủ ảnh được phép xóa
        allow write: if request.auth != null
                     && (
                          userId == request.auth.uid
                          || get(/databases/$(database)/documents/images/$(imageId)).data.uid == request.auth.uid
                        );
      }
    }

    // ===== /friendRequests/{reqId} =====
    match /friendRequests/{reqId} {
      allow read: if request.auth != null &&
                    (resource.data.senderId == request.auth.uid ||
                     resource.data.receiverId == request.auth.uid);

      allow create: if request.auth != null
                    && request.resource.data.senderId == request.auth.uid
                    && request.resource.data.status == 'pending';

      allow update: if request.auth != null
                    && resource.data.receiverId == request.auth.uid
                    && request.resource.data.status in ['accepted','rejected'];

      allow delete: if request.auth != null &&
                      (resource.data.senderId == request.auth.uid ||
                       resource.data.receiverId == request.auth.uid);
    }

    // ===== /chats/{chatId} =====
match /chats/{chatId} {
  // ✅ 1. CREATE TRƯỚC (không check resource.data)
  allow create: if request.auth != null &&
                   request.auth.uid in request.resource.data.participants &&
                   request.resource.data.participants.size() == 2;
  
  // ✅ 2. READ SAU (check resource.data khi document đã tồn tại)
  allow read: if request.auth != null &&
                 request.auth.uid in resource.data.participants;
  
  // ✅ 3. UPDATE (check resource.data)
  allow update: if request.auth != null &&
                   request.auth.uid in resource.data.participants;
  
  // ✅ 4. DELETE (check resource.data)
  allow delete: if request.auth != null &&
                   request.auth.uid in resource.data.participants;
  
  // Messages subcollection
  match /messages/{messageId} {
    allow create: if request.auth != null &&
                     request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participants;
    
    allow read: if request.auth != null &&
                   request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participants;
    
    allow update: if request.auth != null &&
                     request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participants;
 		 }
		}
  }
}